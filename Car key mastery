-- 基本服務與玩家
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- GUI 主體
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "MaolingHub"

-- 修正：主框架樣式
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 450, 0, 350)
Frame.Position = UDim2.new(0.5, -225, 0.5, -175)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true

-- 添加漸層效果
local gradient = Instance.new("UIGradient", Frame)
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 35)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 50))
}
gradient.Rotation = 45

-- 添加外發光效果
local stroke = Instance.new("UIStroke", Frame)
stroke.Color = Color3.fromRGB(100, 150, 255)
stroke.Thickness = 2
stroke.Transparency = 0.5

Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 15)

-- 修正：標題樣式
local Title = Instance.new("TextLabel", Frame)
Title.Size = UDim2.new(1, -80, 0, 50)
Title.Position = UDim2.new(0, 15, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "✨ 貓玲的腳本區 ✨車v0.13"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 22
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextXAlignment = Enum.TextXAlignment.Left

-- 添加標題發光效果
local titleStroke = Instance.new("UIStroke", Title)
titleStroke.Color = Color3.fromRGB(100, 150, 255)
titleStroke.Thickness = 1
titleStroke.Transparency = 0.3

-- 修正：關閉按鈕樣式和功能
local Close = Instance.new("TextButton", Frame)
Close.Size = UDim2.new(0, 35, 0, 35)
Close.Position = UDim2.new(1, -40, 0, 8)
Close.Text = "x"
Close.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.Font = Enum.Font.GothamBold
Close.TextSize = 18
Close.BorderSizePixel = 0

-- 添加關閉按鈕效果
local closeGradient = Instance.new("UIGradient", Close)
closeGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 60, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(180, 40, 40))
}

Instance.new("UICorner", Close).CornerRadius = UDim.new(0, 8)

-- 修正：關閉按鈕功能
Close.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
    _G.maolingHubLoaded = false -- 重置載入狀態
end)

-- 修正：最小化按鈕樣式
local Minimize = Instance.new("TextButton", Frame)
Minimize.Size = UDim2.new(0, 35, 0, 35)
Minimize.Position = UDim2.new(1, -80, 0, 8)
Minimize.Text = "─"
Minimize.BackgroundColor3 = Color3.fromRGB(100, 100, 120)
Minimize.TextColor3 = Color3.fromRGB(255, 255, 255)
Minimize.Font = Enum.Font.GothamBold
Minimize.TextSize = 16
Minimize.BorderSizePixel = 0

local minimizeGradient = Instance.new("UIGradient", Minimize)
minimizeGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 100, 120)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 80, 100))
}

Instance.new("UICorner", Minimize).CornerRadius = UDim.new(0, 8)

-- 修正：側邊欄為可滾動
local SideBar = Instance.new("ScrollingFrame", Frame)
SideBar.Size = UDim2.new(0, 130, 1, -55)
SideBar.Position = UDim2.new(0, 5, 0, 50)
SideBar.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
SideBar.BorderSizePixel = 0
SideBar.ScrollBarThickness = 6
SideBar.CanvasSize = UDim2.new(0, 0, 0, 200)
SideBar.AutomaticCanvasSize = Enum.AutomaticSize.Y
SideBar.ScrollingDirection = Enum.ScrollingDirection.Y

-- 添加側邊欄樣式
local sidebarGradient = Instance.new("UIGradient", SideBar)
sidebarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(45, 45, 65))
}

Instance.new("UICorner", SideBar).CornerRadius = UDim.new(0, 10)

-- 添加UIListLayout到側邊欄
local sidebarLayout = Instance.new("UIListLayout", SideBar)
sidebarLayout.Padding = UDim.new(0, 8)
sidebarLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

-- 修正：內容區域
local Content = Instance.new("Frame", Frame)
Content.Size = UDim2.new(1, -145, 1, -55)
Content.Position = UDim2.new(0, 140, 0, 50)
Content.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
Content.BorderSizePixel = 0

local contentGradient = Instance.new("UIGradient", Content)
contentGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 75))
}

Instance.new("UICorner", Content).CornerRadius = UDim.new(0, 10)

-- 修正：縮小功能的尺寸
local isMinimized = false
local fullSize = UDim2.new(0, 450, 0, 350)
local miniSize = UDim2.new(0, 450, 0, 50)

Minimize.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    SideBar.Visible = not isMinimized
    Content.Visible = not isMinimized
    Frame.Size = isMinimized and miniSize or fullSize
end)

-- 修正：簡單高亮文字的分區按鈕樣式
local function createSectionButton(text, order, parent)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 120, 0, 45)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(85, 85, 105)
    
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.TextTransparency = 0
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 16
    btn.BorderSizePixel = 0
    
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 10)
    
    local btnStroke = Instance.new("UIStroke", btn)
    btnStroke.Color = Color3.fromRGB(150, 180, 255)
    btnStroke.Thickness = 1
    btnStroke.Transparency = 0.6
    
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(105, 105, 125)
        btnStroke.Transparency = 0.3
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(85, 85, 105)
        btnStroke.Transparency = 0.6
    end)
    
    return btn
end

-- 添加滾動框樣式改善
local function styleScrollFrame(scrollFrame)
    scrollFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 150, 255)
    
    local scrollGradient = Instance.new("UIGradient", scrollFrame)
    scrollGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(55, 55, 80))
    }
    
    Instance.new("UICorner", scrollFrame).CornerRadius = UDim.new(0, 8)
end

-- =================================
-- 新增功能：車鑰匙精通分區（觸控版）
-- =================================

-- 創建車鑰匙精通分區按鈕
local CarMasterySection = createSectionButton("車鑰匙精通", 1, SideBar)

-- 創建車鑰匙精通內容區域
local CarMasteryContent = Instance.new("ScrollingFrame", Content)
CarMasteryContent.Size = UDim2.new(1, -10, 1, -10)
CarMasteryContent.Position = UDim2.new(0, 5, 0, 5)
CarMasteryContent.BackgroundTransparency = 1
CarMasteryContent.BorderSizePixel = 0
CarMasteryContent.ScrollBarThickness = 6
CarMasteryContent.CanvasSize = UDim2.new(0, 0, 0, 300)
CarMasteryContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
CarMasteryContent.ScrollingDirection = Enum.ScrollingDirection.Y
CarMasteryContent.Visible = true

styleScrollFrame(CarMasteryContent)

-- 分區按鈕點擊事件
CarMasterySection.MouseButton1Click:Connect(function()
    for _, child in pairs(Content:GetChildren()) do
        if child:IsA("ScrollingFrame") then
            child.Visible = false
        end
    end
    CarMasteryContent.Visible = true
end)

-- 虛擬按鍵移動功能變數
local isAutoMoving = false
local autoMoveConnection = nil
local moveStartTime = 0
local currentDirection = "W" -- "W"(前進), "S"(後退), "STOP"(停止)
local movePhase = "moving" -- "moving"(移動中), "stopping"(停止中)
local phaseStartTime = 0

-- 幫助模式功能變數 (完全修復版)
local isHelperMode = false
local helperConnection = nil
local lastHelperMoveTime = 0
local HELPER_INTERVAL = 6 -- 6秒間隔

-- 修正按鈕創建函數
local function createScrollButton(text, order, parent, spacing)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 180, 0, 35)
    btn.Position = UDim2.new(0.5, -90, 0, 10 + (order - 1) * spacing)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
    
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.TextSize = 16
    btn.Font = Enum.Font.GothamBold
    btn.BorderSizePixel = 0
    
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)
    
    local btnStroke = Instance.new("UIStroke", btn)
    btnStroke.Color = Color3.fromRGB(120, 170, 255)
    btnStroke.Thickness = 1
    btnStroke.Transparency = 0.6
    
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(100, 160, 240)
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btnStroke.Transparency = 0.3
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btnStroke.Transparency = 0.6
    end)
    
    return btn
end

-- 創建幫助模式按鈕
local HelperModeButton = createScrollButton("幫助模式（自動跟隨）", 1, CarMasteryContent, 50)

-- 創建虛擬按鍵移動按鈕
local VirtualMoveButton = createScrollButton("虛擬按鍵移動", 2, CarMasteryContent, 50)

-- 創建狀態顯示標籤
local StatusLabel = Instance.new("TextLabel", CarMasteryContent)
StatusLabel.Size = UDim2.new(0, 180, 0, 25)
StatusLabel.Position = UDim2.new(0.5, -90, 0, 120)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Text = "狀態：停止"
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextSize = 14
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.TextXAlignment = Enum.TextXAlignment.Center

-- 修復版：尋找最近玩家的函數
local function findNearestPlayer()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    
    local myPosition = LocalPlayer.Character.HumanoidRootPart.Position
    local nearestPlayer = nil
    local shortestDistance = math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - myPosition).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end
    
    return nearestPlayer
end

-- 修復版：計算目標位置的函數
local function calculateTargetPosition(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    
    local targetRootPart = targetPlayer.Character.HumanoidRootPart
    local targetPosition = targetRootPart.Position
    local targetLookDirection = targetRootPart.CFrame.LookVector
    
    -- 計算目標玩家面向方向前50單位的位置
    local destinationPosition = targetPosition + (targetLookDirection * 50)
    
    return destinationPosition
end

-- 【關鍵修復】：移動到目標位置的函數 - 移除 AngularVelocity
local function moveToPosition(targetPosition)
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local humanoidRootPart = LocalPlayer.Character.HumanoidRootPart
    local currentPosition = humanoidRootPart.Position
    local newPosition = Vector3.new(targetPosition.X, currentPosition.Y, targetPosition.Z)
    
    -- 創建新的CFrame，保持當前的旋轉
    local newCFrame = CFrame.new(newPosition, newPosition + humanoidRootPart.CFrame.LookVector)
    
    -- 修復：使用 pcall 來安全設置屬性，避免 AngularVelocity 錯誤
    pcall(function()
        humanoidRootPart.CFrame = newCFrame
        humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        
        -- 嘗試設置 AngularVelocity，如果不存在就跳過
        if humanoidRootPart:FindFirstChild("AngularVelocity") then
            humanoidRootPart.AngularVelocity = Vector3.new(0, 0, 0)
        elseif humanoidRootPart:FindFirstChild("BodyAngularVelocity") then
            humanoidRootPart.BodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
        end
    end)
    
    return true
end

-- 完全修復版：幫助模式主要執行函數
local function executeHelperMode()
    if not isHelperMode then return false end
    
    print("執行幫助模式移動...")
    local nearestPlayer = findNearestPlayer()
    if nearestPlayer then
        local targetPosition = calculateTargetPosition(nearestPlayer)
        if targetPosition then
            if moveToPosition(targetPosition) then
                print("成功傳送到", nearestPlayer.Name, "面前")
                return nearestPlayer.Name
            end
        end
    end
    
    print("找不到其他玩家")
    return nil
end

-- 完全修復版：幫助模式功能
HelperModeButton.MouseButton1Click:Connect(function()
    if not isHelperMode then
        -- 開始幫助模式
        print("啟動幫助模式")
        isHelperMode = true
        lastHelperMoveTime = tick()
        HelperModeButton.Text = "停止幫助模式"
        HelperModeButton.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
        
        -- 立即執行一次移動
        local playerName = executeHelperMode()
        if playerName then
            StatusLabel.Text = "狀態：跟隨 " .. playerName .. " (6秒後下次)"
        else
            StatusLabel.Text = "狀態：找不到其他玩家 (6秒後重試)"
        end
        
        -- 創建幫助模式計時器（完全修復版）
        helperConnection = RunService.Heartbeat:Connect(function()
            if not isHelperMode then
                return
            end
            
            local currentTime = tick()
            local timePassed = currentTime - lastHelperMoveTime
            local remainingTime = math.max(0, HELPER_INTERVAL - timePassed)
            
            -- 更新倒數顯示
            if remainingTime > 0 then
                local seconds = math.ceil(remainingTime)
                if StatusLabel.Text:find("跟隨") then
                    local playerName = StatusLabel.Text:match("跟隨 ([^%s]+)")
                    if playerName then
                        StatusLabel.Text = "狀態：跟隨 " .. playerName .. " (" .. seconds .. "秒後下次)"
                    end
                elseif StatusLabel.Text:find("找不到") then
                    StatusLabel.Text = "狀態：找不到其他玩家 (" .. seconds .. "秒後重試)"
                end
            else
                -- 時間到了，執行移動
                print("6秒到了，執行移動！當前時間:", currentTime, "上次時間:", lastHelperMoveTime, "間隔:", timePassed)
                lastHelperMoveTime = currentTime
                
                local playerName = executeHelperMode()
                if playerName then
                    StatusLabel.Text = "狀態：跟隨 " .. playerName .. " (6秒後下次)"
                else
                    StatusLabel.Text = "狀態：找不到其他玩家 (6秒後重試)"
                end
            end
        end)
    else
        -- 停止幫助模式
        print("停止幫助模式")
        isHelperMode = false
        HelperModeButton.Text = "幫助模式（自動跟隨）"
        HelperModeButton.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
        StatusLabel.Text = "狀態：停止"
        
        -- 斷開連接
        if helperConnection then
            helperConnection:Disconnect()
            helperConnection = nil
        end
    end
end)

-- 虛擬按鍵移動功能
local function simulateKeyPress(key)
    VirtualInputManager:SendKeyEvent(true, key, false, game)
end

local function simulateKeyRelease(key)
    VirtualInputManager:SendKeyEvent(false, key, false, game)
end

-- 自動虛擬按鍵移動功能
VirtualMoveButton.MouseButton1Click:Connect(function()
    if not isAutoMoving then
        -- 開始自動移動
        isAutoMoving = true
        moveStartTime = tick()
        phaseStartTime = tick()
        currentDirection = "W"
        movePhase = "moving"
        VirtualMoveButton.Text = "停止虛擬移動"
        VirtualMoveButton.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
        StatusLabel.Text = "狀態：前進中"
        
        -- 開始按下前進鍵
        simulateKeyPress(Enum.KeyCode.W)
        
        -- 自動移動循環
        autoMoveConnection = RunService.Heartbeat:Connect(function()
            local currentTime = tick()
            local phaseElapsedTime = currentTime - phaseStartTime
            
            if movePhase == "moving" then
                -- 移動階段 - 持續3秒
                if phaseElapsedTime >= 3 then
                    -- 釋放當前按鍵，進入停止階段
                    simulateKeyRelease(Enum.KeyCode[currentDirection])
                    movePhase = "stopping"
                    phaseStartTime = currentTime
                    StatusLabel.Text = "狀態：等速歸零中..."
                end
            elseif movePhase == "stopping" then
                -- 停止階段 - 持續1秒讓速度歸零
                if phaseElapsedTime >= 1 then
                    -- 切換方向並開始移動
                    if currentDirection == "W" then
                        currentDirection = "S"
                        StatusLabel.Text = "狀態：後退中"
                    else
                        currentDirection = "W"
                        StatusLabel.Text = "狀態：前進中"
                    end
                    
                    -- 按下新的按鍵
                    simulateKeyPress(Enum.KeyCode[currentDirection])
                    movePhase = "moving"
                    phaseStartTime = currentTime
                end
            end
        end)
    else
        -- 停止自動移動
        isAutoMoving = false
        VirtualMoveButton.Text = "虛擬按鍵移動"
        VirtualMoveButton.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
        StatusLabel.Text = "狀態：停止"
        
        if autoMoveConnection then
            autoMoveConnection:Disconnect()
            autoMoveConnection = nil
        end
        
        -- 釋放當前按下的按鍵
        simulateKeyRelease(Enum.KeyCode[currentDirection])
    end
end)

-- 當GUI被銷毀時清理所有連接
ScreenGui.AncestryChanged:Connect(function()
    if not ScreenGui.Parent then
        -- 清理幫助模式連接
        if helperConnection then
            helperConnection:Disconnect()
            helperConnection = nil
        end
        -- 清理虛擬移動連接
        if autoMoveConnection then
            autoMoveConnection:Disconnect()
            autoMoveConnection = nil
        end
        -- 確保釋放所有按鍵
        for _, key in pairs({"W", "S"}) do
            pcall(function()
                simulateKeyRelease(Enum.KeyCode[key])
            end)
        end
        -- 重置所有狀態
        isHelperMode = false
        isAutoMoving = false
    end
end)
