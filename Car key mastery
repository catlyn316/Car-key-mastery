-- 基本服務與玩家
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- GUI 主體
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "MaolingHub"

-- 修正：主框架樣式
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 450, 0, 350)
Frame.Position = UDim2.new(0.5, -225, 0.5, -175)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true

-- 添加漸層效果
local gradient = Instance.new("UIGradient", Frame)
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(25, 25, 35)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 50))
}
gradient.Rotation = 45

-- 添加外發光效果
local stroke = Instance.new("UIStroke", Frame)
stroke.Color = Color3.fromRGB(100, 150, 255)
stroke.Thickness = 2
stroke.Transparency = 0.5

Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 15)

-- 修正：標題樣式
local Title = Instance.new("TextLabel", Frame)
Title.Size = UDim2.new(1, -80, 0, 50)
Title.Position = UDim2.new(0, 15, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "✨ 貓玲的腳本區 ✨車v0.15"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 22
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextXAlignment = Enum.TextXAlignment.Left

-- 添加標題發光效果
local titleStroke = Instance.new("UIStroke", Title)
titleStroke.Color = Color3.fromRGB(100, 150, 255)
titleStroke.Thickness = 1
titleStroke.Transparency = 0.3

-- 修正：關閉按鈕樣式和功能
local Close = Instance.new("TextButton", Frame)
Close.Size = UDim2.new(0, 35, 0, 35)
Close.Position = UDim2.new(1, -40, 0, 8)
Close.Text = "x"
Close.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.Font = Enum.Font.GothamBold
Close.TextSize = 18
Close.BorderSizePixel = 0

-- 添加關閉按鈕效果
local closeGradient = Instance.new("UIGradient", Close)
closeGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 60, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(180, 40, 40))
}

Instance.new("UICorner", Close).CornerRadius = UDim.new(0, 8)

-- 修正：關閉按鈕功能
Close.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
    _G.maolingHubLoaded = false -- 重置載入狀態
end)

-- 修正：最小化按鈕樣式
local Minimize = Instance.new("TextButton", Frame)
Minimize.Size = UDim2.new(0, 35, 0, 35)
Minimize.Position = UDim2.new(1, -80, 0, 8)
Minimize.Text = "─"
Minimize.BackgroundColor3 = Color3.fromRGB(100, 100, 120)
Minimize.TextColor3 = Color3.fromRGB(255, 255, 255)
Minimize.Font = Enum.Font.GothamBold
Minimize.TextSize = 16
Minimize.BorderSizePixel = 0

local minimizeGradient = Instance.new("UIGradient", Minimize)
minimizeGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(100, 100, 120)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 80, 100))
}

Instance.new("UICorner", Minimize).CornerRadius = UDim.new(0, 8)

-- 修正：側邊欄為可滾動
local SideBar = Instance.new("ScrollingFrame", Frame)
SideBar.Size = UDim2.new(0, 130, 1, -55)
SideBar.Position = UDim2.new(0, 5, 0, 50)
SideBar.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
SideBar.BorderSizePixel = 0
SideBar.ScrollBarThickness = 6
SideBar.CanvasSize = UDim2.new(0, 0, 0, 200)
SideBar.AutomaticCanvasSize = Enum.AutomaticSize.Y
SideBar.ScrollingDirection = Enum.ScrollingDirection.Y

-- 添加側邊欄樣式
local sidebarGradient = Instance.new("UIGradient", SideBar)
sidebarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(45, 45, 65))
}

Instance.new("UICorner", SideBar).CornerRadius = UDim.new(0, 10)

-- 添加UIListLayout到側邊欄
local sidebarLayout = Instance.new("UIListLayout", SideBar)
sidebarLayout.Padding = UDim.new(0, 8)
sidebarLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

-- 修正：內容區域
local Content = Instance.new("Frame", Frame)
Content.Size = UDim2.new(1, -145, 1, -55)
Content.Position = UDim2.new(0, 140, 0, 50)
Content.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
Content.BorderSizePixel = 0

local contentGradient = Instance.new("UIGradient", Content)
contentGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 75))
}

Instance.new("UICorner", Content).CornerRadius = UDim.new(0, 10)

-- 修正：縮小功能的尺寸
local isMinimized = false
local fullSize = UDim2.new(0, 450, 0, 350)
local miniSize = UDim2.new(0, 450, 0, 50)

Minimize.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    SideBar.Visible = not isMinimized
    Content.Visible = not isMinimized
    Frame.Size = isMinimized and miniSize or fullSize
end)

-- 修正：簡單高亮文字的分區按鈕樣式
local function createSectionButton(text, order, parent)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 120, 0, 45)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(85, 85, 105)
    
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.TextTransparency = 0
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 16
    btn.BorderSizePixel = 0
    
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 10)
    
    local btnStroke = Instance.new("UIStroke", btn)
    btnStroke.Color = Color3.fromRGB(150, 180, 255)
    btnStroke.Thickness = 1
    btnStroke.Transparency = 0.6
    
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(105, 105, 125)
        btnStroke.Transparency = 0.3
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(85, 85, 105)
        btnStroke.Transparency = 0.6
    end)
    
    return btn
end

-- 添加滾動框樣式改善
local function styleScrollFrame(scrollFrame)
    scrollFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 150, 255)
    
    local scrollGradient = Instance.new("UIGradient", scrollFrame)
    scrollGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(55, 55, 80))
    }
    
    Instance.new("UICorner", scrollFrame).CornerRadius = UDim.new(0, 8)
end

-- =================================
-- 新增功能：車鑰匙精通分區（觸控版）
-- =================================

-- 創建車鑰匙精通分區按鈕
local CarMasterySection = createSectionButton("車鑰匙精通", 1, SideBar)

-- 創建車鑰匙精通內容區域
local CarMasteryContent = Instance.new("ScrollingFrame", Content)
CarMasteryContent.Size = UDim2.new(1, -10, 1, -10)
CarMasteryContent.Position = UDim2.new(0, 5, 0, 5)
CarMasteryContent.BackgroundTransparency = 1
CarMasteryContent.BorderSizePixel = 0
CarMasteryContent.ScrollBarThickness = 6
CarMasteryContent.CanvasSize = UDim2.new(0, 0, 0, 500)
CarMasteryContent.AutomaticCanvasSize = Enum.AutomaticSize.Y
CarMasteryContent.ScrollingDirection = Enum.ScrollingDirection.Y
CarMasteryContent.Visible = true

styleScrollFrame(CarMasteryContent)

-- 分區按鈕點擊事件
CarMasterySection.MouseButton1Click:Connect(function()
    for _, child in pairs(Content:GetChildren()) do
        if child:IsA("ScrollingFrame") then
            child.Visible = false
        end
    end
    CarMasteryContent.Visible = true
end)

-- 虛擬按鍵移動功能變數
local isAutoMoving = false
local autoMoveConnection = nil
local moveStartTime = 0
local currentDirection = "W" -- "W"(前進), "S"(後退), "STOP"(停止)
local movePhase = "moving" -- "moving"(移動中), "stopping"(停止中)
local phaseStartTime = 0

-- 幫助模式功能變數 (完全修復版)
local isHelperMode = false
local helperConnection = nil
local ragdollConnection = nil
local fallingConnection = nil
local lastHelperMoveTime = 0
local HELPER_INTERVAL = 3 -- 3秒間隔
local targetPlayerName = ""
local helperMode = "normal" -- "normal" 或 "reset"
local isFallingDetected = false
local fallingStartTime = 0

-- 修正按鈕創建函數
local function createScrollButton(text, order, parent, spacing)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0, 180, 0, 35)
    btn.Position = UDim2.new(0.5, -90, 0, 10 + (order - 1) * spacing)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
    
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.TextSize = 16
    btn.Font = Enum.Font.GothamBold
    btn.BorderSizePixel = 0
    
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)
    
    local btnStroke = Instance.new("UIStroke", btn)
    btnStroke.Color = Color3.fromRGB(120, 170, 255)
    btnStroke.Thickness = 1
    btnStroke.Transparency = 0.6
    
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(100, 160, 240)
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btnStroke.Transparency = 0.3
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btnStroke.Transparency = 0.6
    end)
    
    return btn
end

-- 創建輸入框的函數
local function createTextBox(placeholder, order, parent, spacing)
    local textBox = Instance.new("TextBox", parent)
    textBox.Size = UDim2.new(0, 180, 0, 30)
    textBox.Position = UDim2.new(0.5, -90, 0, 10 + (order - 1) * spacing)
    textBox.PlaceholderText = placeholder
    textBox.Text = ""
    textBox.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.PlaceholderColor3 = Color3.fromRGB(180, 180, 180)
    textBox.Font = Enum.Font.Gotham
    textBox.TextSize = 14
    textBox.BorderSizePixel = 0
    textBox.ClearTextOnFocus = false
    
    Instance.new("UICorner", textBox).CornerRadius = UDim.new(0, 6)
    
    local textBoxStroke = Instance.new("UIStroke", textBox)
    textBoxStroke.Color = Color3.fromRGB(120, 170, 255)
    textBoxStroke.Thickness = 1
    textBoxStroke.Transparency = 0.7
    
    textBox.Focused:Connect(function()
        textBoxStroke.Transparency = 0.3
    end)
    
    textBox.FocusLost:Connect(function()
        textBoxStroke.Transparency = 0.7
    end)
    
    return textBox
end

-- 創建下拉選單的函數
local function createDropdown(options, order, parent, spacing)
    local dropdownFrame = Instance.new("Frame", parent)
    dropdownFrame.Size = UDim2.new(0, 180, 0, 30)
    dropdownFrame.Position = UDim2.new(0.5, -90, 0, 10 + (order - 1) * spacing)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
    dropdownFrame.BorderSizePixel = 0
    
    Instance.new("UICorner", dropdownFrame).CornerRadius = UDim.new(0, 6)
    
    local dropdownStroke = Instance.new("UIStroke", dropdownFrame)
    dropdownStroke.Color = Color3.fromRGB(120, 170, 255)
    dropdownStroke.Thickness = 1
    dropdownStroke.Transparency = 0.7
    
    local mainButton = Instance.new("TextButton", dropdownFrame)
    mainButton.Size = UDim2.new(1, 0, 1, 0)
    mainButton.BackgroundTransparency = 1
    mainButton.Text = options[1]
    mainButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    mainButton.Font = Enum.Font.Gotham
    mainButton.TextSize = 14
    
    local arrow = Instance.new("TextLabel", dropdownFrame)
    arrow.Size = UDim2.new(0, 20, 1, 0)
    arrow.Position = UDim2.new(1, -20, 0, 0)
    arrow.BackgroundTransparency = 1
    arrow.Text = "▼"
    arrow.TextColor3 = Color3.fromRGB(255, 255, 255)
    arrow.Font = Enum.Font.Gotham
    arrow.TextSize = 12
    
    local optionsFrame = Instance.new("Frame", dropdownFrame)
    optionsFrame.Size = UDim2.new(1, 0, 0, #options * 30)
    optionsFrame.Position = UDim2.new(0, 0, 1, 2)
    optionsFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
    optionsFrame.BorderSizePixel = 0
    optionsFrame.Visible = false
    optionsFrame.ZIndex = 10
    
    Instance.new("UICorner", optionsFrame).CornerRadius = UDim.new(0, 6)
    
    local optionsStroke = Instance.new("UIStroke", optionsFrame)
    optionsStroke.Color = Color3.fromRGB(120, 170, 255)
    optionsStroke.Thickness = 1
    optionsStroke.Transparency = 0.7
    
    local selectedIndex = 1
    local isOpen = false
    
    for i, option in ipairs(options) do
        local optionButton = Instance.new("TextButton", optionsFrame)
        optionButton.Size = UDim2.new(1, 0, 0, 30)
        optionButton.Position = UDim2.new(0, 0, 0, (i - 1) * 30)
        optionButton.BackgroundTransparency = 1
        optionButton.Text = option
        optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        optionButton.Font = Enum.Font.Gotham
        optionButton.TextSize = 14
        optionButton.ZIndex = 11
        
        optionButton.MouseEnter:Connect(function()
            optionButton.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
            optionButton.BackgroundTransparency = 0
        end)
        
        optionButton.MouseLeave:Connect(function()
            optionButton.BackgroundTransparency = 1
        end)
        
        optionButton.MouseButton1Click:Connect(function()
            selectedIndex = i
            mainButton.Text = option
            optionsFrame.Visible = false
            isOpen = false
            arrow.Text = "▼"
        end)
    end
    
    mainButton.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        optionsFrame.Visible = isOpen
        arrow.Text = isOpen and "▲" or "▼"
    end)
    
    -- 返回框架和獲取選中值的函數
    return dropdownFrame, function() return selectedIndex, options[selectedIndex] end
end

-- 創建玩家名稱輸入框
local PlayerNameInput = createTextBox("輸入玩家名稱", 1, CarMasteryContent, 45)

-- 創建模式選擇下拉選單
local ModeDropdown, getModeSelection = createDropdown({"被撞後不重置", "被撞後重置"}, 2, CarMasteryContent, 45)

-- 創建幫助模式按鈕
local HelperModeButton = createScrollButton("開始幫助模式", 3, CarMasteryContent, 45)

-- 創建虛擬按鍵移動按鈕
local VirtualMoveButton = createScrollButton("虛擬按鍵移動", 4, CarMasteryContent, 45)

-- 創建狀態顯示標籤
local StatusLabel = Instance.new("TextLabel", CarMasteryContent)
StatusLabel.Size = UDim2.new(0, 180, 0, 25)
StatusLabel.Position = UDim2.new(0.5, -90, 0, 200)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Text = "狀態：停止"
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextSize = 14
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.TextXAlignment = Enum.TextXAlignment.Center

-- 修復版：尋找指定名稱玩家的函數
local function findPlayerByName(playerName)
    if not playerName or playerName == "" then
        return nil
    end
    
    -- 完全匹配
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Name == playerName then
            return player
        end
    end
    
    -- 部分匹配（不區分大小寫）
    local lowerName = playerName:lower()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Name:lower():find(lowerName) then
            return player
        end
    end
    
    return nil
end

-- 修復版：計算目標位置的函數
local function calculateTargetPosition(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    
    local targetRootPart = targetPlayer.Character.HumanoidRootPart
    local targetPosition = targetRootPart.Position
    local targetLookDirection = targetRootPart.CFrame.LookVector
    
    -- 計算目標玩家面向方向前50單位的位置
    local destinationPosition = targetPosition + (targetLookDirection * 50)
    
    return destinationPosition
end

-- 【關鍵修復】：移動到目標位置的函數 - 移除 AngularVelocity
local function moveToPosition(targetPosition)
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local humanoidRootPart = LocalPlayer.Character.HumanoidRootPart
    local currentPosition = humanoidRootPart.Position
    local newPosition = Vector3.new(targetPosition.X, currentPosition.Y, targetPosition.Z)
    
    -- 創建新的CFrame，保持當前的旋轉
    local newCFrame = CFrame.new(newPosition, newPosition + humanoidRootPart.CFrame.LookVector)
    
    -- 修復：使用 pcall 來安全設置屬性，避免 AngularVelocity 錯誤
    pcall(function()
        humanoidRootPart.CFrame = newCFrame
        humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        
        -- 嘗試設置 AngularVelocity，如果不存在就跳過
        if humanoidRootPart:FindFirstChild("AngularVelocity") then
            humanoidRootPart.AngularVelocity = Vector3.new(0, 0, 0)
        elseif humanoidRootPart:FindFirstChild("BodyAngularVelocity") then
            humanoidRootPart.BodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
        end
    end)
    
    return true
end

-- 重置角色的函數
local function resetCharacter()
    print("執行重置...")
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.Health = 0
    end
end

-- 傳送到 Lobby 的函數
local function teleportToLobby()
    wait(0.1) -- 等待角色重新載入
    
    -- 等待角色完全載入
    repeat wait(0.1) until LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    
    local lobbyTeleport = Workspace:FindFirstChild("Lobby")
    if lobbyTeleport then
        lobbyTeleport = lobbyTeleport:FindFirstChild("Teleport1")
    end
    
    if lobbyTeleport and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        print("傳送到 Lobby...")
        LocalPlayer.Character.HumanoidRootPart.CFrame = lobbyTeleport.CFrame
        return true
    else
        print("找不到 Workspace.Lobby.Teleport1")
        return false
    end
end

-- 檢查角色是否正在下墜的函數
local function isFalling()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local humanoidRootPart = LocalPlayer.Character.HumanoidRootPart
    local velocity = humanoidRootPart.Velocity
    
    -- 檢查垂直速度是否向下且速度足夠大（表示正在下墜）
    return velocity.Y < -20 -- 如果Y軸速度小於-20，認為是在下墜
end

-- 檢查 Ragdoll 狀態的函數
local function isInRagdoll()
    if not LocalPlayer.Character then return false end
    
    local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
    if not humanoid then return false end
    
    -- 檢查 PlatformStand（常見的 ragdoll 指標）
    if humanoid.PlatformStand then return true end
    
    -- 檢查 Sit 狀態（某些遊戲用這個表示 ragdoll）
    if humanoid.Sit then return true end
    
    -- 檢查 StateType 是否為 Physics（物理狀態）
    if humanoid:GetState() == Enum.HumanoidStateType.Physics then return true end
    
    return false
end

-- 固定角色位置的函數
local function anchorCharacter(targetPosition, duration)
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local humanoidRootPart = LocalPlayer.Character.HumanoidRootPart
    local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
    
    -- 創建固定位置
    local newPosition = Vector3.new(targetPosition.X, targetPosition.Y, targetPosition.Z)
    local newCFrame = CFrame.new(newPosition, newPosition + humanoidRootPart.CFrame.LookVector)
    
    -- 創建 BodyPosition 來固定角色
    local bodyPosition = Instance.new("BodyPosition")
    bodyPosition.MaxForce = Vector3.new(4000, 4000, 4000)
    bodyPosition.Position = newPosition
    bodyPosition.D = 3000 -- 阻尼
    bodyPosition.P = 10000 -- 動力
    bodyPosition.Parent = humanoidRootPart
    
    -- 創建 BodyAngularVelocity 來停止旋轉
    local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
    bodyAngularVelocity.MaxTorque = Vector3.new(4000, 4000, 4000)
    bodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
    bodyAngularVelocity.Parent = humanoidRootPart
    
    -- 設定角色狀態
    if humanoid then
        humanoid.PlatformStand = true
    end
    
    print("角色已固定在位置:", newPosition, "持續時間:", duration, "秒")
    
    -- 在指定時間後移除固定
    spawn(function()
        wait(duration)
        if bodyPosition and bodyPosition.Parent then
            bodyPosition:Destroy()
        end
        if bodyAngularVelocity and bodyAngularVelocity.Parent then
            bodyAngularVelocity:Destroy()
        end
        if humanoid then
            humanoid.PlatformStand = false
        end
        print("角色固定已解除")
    end)
end

-- 完全修復版：幫助模式主要執行函數
local function executeHelperMode()
    if not isHelperMode then return false end
    
    print("執行幫助模式移動...")
    local targetPlayer = findPlayerByName(targetPlayerName)
    if targetPlayer then
        local targetPosition = calculateTargetPosition(targetPlayer)
        if targetPosition then
            if moveToPosition(targetPosition) then
                print("成功傳送到", targetPlayer.Name, "面前")
                return targetPlayer.Name
            end
        end
    end
    
    print("找不到目標玩家:", targetPlayerName)
    return nil
end

-- 完全修復版：幫助模式功能
HelperModeButton.MouseButton1Click:Connect(function()
    if not isHelperMode then
        -- 檢查是否有輸入玩家名稱
        if PlayerNameInput.Text == "" then
            StatusLabel.Text = "狀態：請輸入玩家名稱"
            return
        end
        
        -- 開始幫助模式
        print("啟動幫助模式")
        isHelperMode = true
        targetPlayerName = PlayerNameInput.Text
        local _, selectedMode = getModeSelection()
        helperMode = selectedMode == "被撞後重置" and "reset" or "normal"
        lastHelperMoveTime = tick()
        HelperModeButton.Text = "停止幫助模式"
        HelperModeButton.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
        
        -- 立即執行一次移動
        local playerName = executeHelperMode()
        if playerName then
            StatusLabel.Text = "狀態：跟隨 " .. playerName .. " (3秒後下次)"
        else
            StatusLabel.Text = "狀態：找不到玩家 " .. targetPlayerName .. " (3秒後重試)"
        end
        
        -- 創建幫助模式計時器（完全修復版）
        helperConnection = RunService.Heartbeat:Connect(function()
            if not isHelperMode then
                return
            end
            
            local currentTime = tick()
            local timePassed = currentTime - lastHelperMoveTime
            local remainingTime = math.max(0, HELPER_INTERVAL - timePassed)
            
            -- 更新倒數顯示
            if remainingTime > 0 then
                local seconds = math.ceil(remainingTime)
                if StatusLabel.Text:find("跟隨") then
                    local playerName = StatusLabel.Text:match("跟隨 ([^%s]+)")
                    if playerName then
                        StatusLabel.Text = "狀態：跟隨 " .. playerName .. " (" .. seconds .. "秒後下次)"
                    end
                elseif StatusLabel.Text:find("找不到") then
                    StatusLabel.Text = "狀態：找不到玩家 " .. targetPlayerName .. " (" .. seconds .. "秒後重試)"
                end
            else
                -- 時間到了，執行移動
                print("3秒到了，執行移動！當前時間:", currentTime, "上次時間:", lastHelperMoveTime, "間隔:", timePassed)
                lastHelperMoveTime = currentTime
                
                local playerName = executeHelperMode()
                if playerName then
                    StatusLabel.Text = "狀態：跟隨 " .. playerName .. " (3秒後下次)"
                else
                    StatusLabel.Text = "狀態：找不到玩家 " .. targetPlayerName .. " (3秒後重試)"
                end
            end
        end)
        
        -- 如果選擇了重置模式，監聽 ragdoll 狀態和下墜狀態
        if helperMode == "reset" then
            ragdollConnection = RunService.Heartbeat:Connect(function()
                if not isHelperMode then return end
                
                if isInRagdoll() then
                    print("檢測到 Ragdoll 狀態，執行重置...")
                    StatusLabel.Text = "狀態：檢測到撞擊，重置中..."
                    
                    -- 重置角色
                    resetCharacter()
                    
                    -- 等待重生後傳送到 Lobby
                    spawn(function()
                        if teleportToLobby() then
                            wait(0.5) -- 等待0.5秒
                            
                            -- 如果幫助模式仍然啟用，傳送到目標位置
                            if isHelperMode then
                                local playerName = executeHelperMode()
                                if playerName then
                                    StatusLabel.Text = "狀態：重置完成，跟隨 " .. playerName
                                    lastHelperMoveTime = tick() -- 重置計時器
                                else
                                    StatusLabel.Text = "狀態：重置完成，找不到目標"
                                end
                            end
                        end
                    end)
                end
            end)
            
            -- 監聽下墜狀態
            fallingConnection = RunService.Heartbeat:Connect(function()
                if not isHelperMode then return end
                
                if isFalling() then
                    if not isFallingDetected then
                        -- 開始檢測到下墜
                        isFallingDetected = true
                        fallingStartTime = tick()
                        print("檢測到下墜狀態，開始計時...")
                        StatusLabel.Text = "狀態：檢測到下墜，等待3秒..."
                    else
                        -- 已經在下墜狀態，檢查是否達到3秒
                        local fallingTime = tick() - fallingStartTime
                        if fallingTime >= 3 then
                            print("下墜已持續3秒，執行固定...")
                            local targetPlayer = findPlayerByName(targetPlayerName)
                            if targetPlayer then
                                local targetPosition = calculateTargetPosition(targetPlayer)
                                if targetPosition then
                                    anchorCharacter(targetPosition, 0.5)
                                    StatusLabel.Text = "狀態：已固定位置0.5秒"
                                end
                            end
                            -- 重置下墜檢測
                            isFallingDetected = false
                        else
                            -- 更新倒數顯示
                            local remainingTime = 3 - fallingTime
                            StatusLabel.Text = "狀態：下墜中，" .. math.ceil(remainingTime) .. "秒後固定"
                        end
                    end
                else
                    -- 沒有在下墜，重置檢測狀態
                    if isFallingDetected then
                        isFallingDetected = false
                        print("下墜狀態結束")
                    end
                end
            end)
        end
    else
        -- 停止幫助模式
        print("停止幫助模式")
        isHelperMode = false
        HelperModeButton.Text = "開始幫助模式"
        HelperModeButton.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
        StatusLabel.Text = "狀態：停止"
        
        -- 斷開連接
        if helperConnection then
            helperConnection:Disconnect()
            helperConnection = nil
        end
        if ragdollConnection then
            ragdollConnection:Disconnect()
            ragdollConnection = nil
        end
        if fallingConnection then
            fallingConnection:Disconnect()
            fallingConnection = nil
        end
        
        -- 重置下墜檢測狀態
        isFallingDetected = false
    end
end)

-- 虛擬按鍵移動功能
local function simulateKeyPress(key)
    VirtualInputManager:SendKeyEvent(true, key, false, game)
end

local function simulateKeyRelease(key)
    VirtualInputManager:SendKeyEvent(false, key, false, game)
end

-- 自動虛擬按鍵移動功能
VirtualMoveButton.MouseButton1Click:Connect(function()
    if not isAutoMoving then
        -- 開始自動移動
        isAutoMoving = true
        moveStartTime = tick()
        phaseStartTime = tick()
        currentDirection = "W"
        movePhase = "moving"
        VirtualMoveButton.Text = "停止虛擬移動"
        VirtualMoveButton.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
        StatusLabel.Text = "狀態：前進中"
        
        -- 開始按下前進鍵
        simulateKeyPress(Enum.KeyCode.W)
        
        -- 自動移動循環
        autoMoveConnection = RunService.Heartbeat:Connect(function()
            local currentTime = tick()
            local phaseElapsedTime = currentTime - phaseStartTime
            
            if movePhase == "moving" then
                -- 移動階段 - 持續3秒
                if phaseElapsedTime >= 3 then
                    -- 釋放當前按鍵，進入停止階段
                    simulateKeyRelease(Enum.KeyCode[currentDirection])
                    movePhase = "stopping"
                    phaseStartTime = currentTime
                    StatusLabel.Text = "狀態：等速歸零中..."
                end
            elseif movePhase == "stopping" then
                -- 停止階段 - 持續1秒讓速度歸零
                if phaseElapsedTime >= 1 then
                    -- 切換方向並開始移動
                    if currentDirection == "W" then
                        currentDirection = "S"
                        StatusLabel.Text = "狀態：後退中"
                    else
                        currentDirection = "W"
                        StatusLabel.Text = "狀態：前進中"
                    end
                    
                    -- 按下新的按鍵
                    simulateKeyPress(Enum.KeyCode[currentDirection])
                    movePhase = "moving"
                    phaseStartTime = currentTime
                end
            end
        end)
    else
        -- 停止自動移動
        isAutoMoving = false
        VirtualMoveButton.Text = "虛擬按鍵移動"
        VirtualMoveButton.BackgroundColor3 = Color3.fromRGB(80, 140, 220)
        StatusLabel.Text = "狀態：停止"
        
        if autoMoveConnection then
            autoMoveConnection:Disconnect()
            autoMoveConnection = nil
        end
        
        -- 釋放當前按下的按鍵
        simulateKeyRelease(Enum.KeyCode[currentDirection])
    end
end)

-- 當GUI被銷毀時清理所有連接
ScreenGui.AncestryChanged:Connect(function()
    if not ScreenGui.Parent then
        -- 清理幫助模式連接
        if helperConnection then
            helperConnection:Disconnect()
            helperConnection = nil
        end
        if ragdollConnection then
            ragdollConnection:Disconnect()
            ragdollConnection = nil
        end
        if fallingConnection then
            fallingConnection:Disconnect()
            fallingConnection = nil
        end
        -- 清理虛擬移動連接
        if autoMoveConnection then
            autoMoveConnection:Disconnect()
            autoMoveConnection = nil
        end
        -- 確保釋放所有按鍵
        for _, key in pairs({"W", "S"}) do
            pcall(function()
                simulateKeyRelease(Enum.KeyCode[key])
            end)
        end
        -- 重置所有狀態
        isHelperMode = false
        isAutoMoving = false
        isFallingDetected = false
    end
end)
